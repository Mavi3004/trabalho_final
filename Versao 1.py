import tkinter as tk
from tkinter import messagebox

class Escolha:
    def _init_(self, texto, impacto, resultado):
        self.texto = texto
        self.impacto = impacto
        self.resultado = resultado

class Missao:
    def _init_(self, titulo, narrativa, escolhas):
        self.titulo = titulo
        self.narrativa = narrativa
        self.escolhas = escolhas

class JogoGUI:
    def _init_(self, root):
        self.root = root
        self.root.title("üå± ECOG√äNESE: O LEGADO DO DOUTOR üåç")
        self.nome_jogador = ""
        self.pontuacao = {'ecologico': 0, 'social': 0, 'tecnologico': 0, 'sustentavel': 0}
        self.missoes = self.criar_missoes()
        self.missao_atual = 0
        self.tela_inicial()

    def tela_inicial(self):
        for widget in self.root.winfo_children():
            widget.destroy()

        titulo = tk.Label(self.root, text="üå± ECOG√äNESE: O LEGADO DO DOUTOR üåç", font=("Helvetica", 20, "bold"), fg="green")
        titulo.pack(pady=20)

        historia = "Em um planeta √† beira do colapso ambiental, voc√™ √© a √∫ltima esperan√ßa. Como um brilhante cientista em biotecnologia ambiental, foi recrutado pelo Projeto Ecog√™nese. Sua miss√£o: usar ci√™ncia e sabedoria para salvar ecossistemas devastados. As escolhas s√£o suas. O destino do mundo est√° em suas m√£os."
        descricao = tk.Label(self.root, text=historia, wraplength=600, justify="center", font=("Helvetica", 12))
        descricao.pack(pady=20)

        rotulo_nome = tk.Label(self.root, text="Digite o nome do personagem:", font=("Helvetica", 12))
        rotulo_nome.pack()
        self.entrada_nome = tk.Entry(self.root, font=("Helvetica", 12))
        self.entrada_nome.pack(pady=10)

        botao_jogar = tk.Button(self.root, text="Iniciar Jogo", font=("Helvetica", 12, "bold"), command=self.iniciar_jogo)
        botao_jogar.pack(pady=20)

    def iniciar_jogo(self):
        nome_digitado = self.entrada_nome.get()
        if nome_digitado.strip():
            self.nome_jogador = nome_digitado.strip()
            self.exibir_missao()
        else:
            messagebox.showwarning("Aten√ß√£o", "Por favor, digite o nome do personagem.")

    def criar_missoes(self):
        return [
            Missao(
                "Miss√£o 1: A Cidade Envenenada",
                "Uma metr√≥pole foi contaminada por metais pesados. Como voc√™, Dr(a). {}, ir√° agir para descontaminar o solo?".format(self.nome_jogador),
                [
                    Escolha("Usar MGMs para metabolizar os metais", {'ecologico': -2, 'tecnologico': 2}, "Os MGMs funcionaram, mas causaram muta√ß√µes em insetos locais. A m√≠dia critica sua decis√£o."),
                    Escolha("Usar plantas hiperacumuladoras", {'ecologico': 2, 'sustentavel': 2}, "As plantas come√ßaram a absorver lentamente os metais. A popula√ß√£o aplaude sua paci√™ncia e sabedoria."),
                    Escolha("Ignorar protocolos e usar agentes qu√≠micos", {'ecologico': -5}, "O solo entrou em combust√£o! Uma explos√£o causou caos e polui√ß√£o a√©rea."),
                ]
            ),
            Missao(
                "Miss√£o 2: A Floresta Esquecida",
                "Uma floresta tropical devastada por queimadas precisa ser restaurada. Dr(a). {}, qual caminho seguir√°?".format(self.nome_jogador),
                [
                    Escolha("Implantar sementes bioengenheiradas", {'tecnologico': 2, 'sustentavel': -1}, "As √°rvores crescem r√°pido, mas algumas esp√©cies dominam e sufocam outras."),
                    Escolha("Reflorestamento com comunidades locais", {'social': 3, 'ecologico': 2}, "As comunidades se unem e a floresta come√ßa a renascer naturalmente."),
                    Escolha("Pulverizar aceleradores gen√©ticos por drones", {'ecologico': -4}, "Uma rea√ß√£o em cadeia de crescimento descontrolado destr√≥i biomas pr√≥ximos. Voc√™ foi severamente criticado."),
                ]
            ),
            Missao(
                "Miss√£o 3: As √Åguas da Morte",
                "Um rio foi contaminado por uma ind√∫stria qu√≠mica. Dr(a). {}, qual ser√° sua estrat√©gia final?".format(self.nome_jogador),
                [
                    Escolha("Biofiltros com bact√©rias modificadas", {'tecnologico': 2, 'sustentavel': 1}, "A IA controlou bem os biofiltros. O rio voltou a respirar."),
                    Escolha("Cons√≥rcios microbianos naturais", {'ecologico': 2, 'sustentavel': 2}, "A natureza come√ßou a se regenerar com sua ajuda inteligente e sens√≠vel."),
                    Escolha("Tentar neutralizar com soda c√°ustica", {'ecologico': -4, 'sustentavel': -2}, "Uma explos√£o destr√≥i a barragem. O rio est√° morto. Voc√™ ser√° lembrado como o Doutor do Veneno."),
                ]
            )
        ]

    def exibir_missao(self):
        for widget in self.root.winfo_children():
            widget.destroy()

        if self.missao_atual < len(self.missoes):
            missao = self.missoes[self.missao_atual]
            titulo = tk.Label(self.root, text=missao.titulo, font=("Helvetica", 16, "bold"))
            titulo.pack(pady=10)

            narrativa = tk.Label(self.root, text=missao.narrativa, wraplength=600, justify="center")
            narrativa.pack(pady=10)

            for escolha in missao.escolhas:
                botao = tk.Button(self.root, text=escolha.texto, wraplength=500, justify="left",
                                  command=lambda e=escolha: self.processar_escolha(e))
                botao.pack(pady=5)
        else:
            self.finalizar_jogo()

    def processar_escolha(self, escolha):
        for chave in escolha.impacto:
            self.pontuacao[chave] += escolha.impacto[chave]

        messagebox.showinfo("Resultado da Escolha", escolha.resultado)

        if escolha.impacto.get('ecologico', 0) < -4:
            if self.missao_atual == 2:
                messagebox.showerror("Fim", "Suas escolhas levaram √† desconfian√ßa global na ci√™ncia. Voc√™ perdeu sua credibilidade e o mundo perdeu sua chance. Fim de jogo.")
                self.root.quit()
                return
            else:
                messagebox.showwarning("Aten√ß√£o", "Essa escolha teve consequ√™ncias graves. Ainda h√° esperan√ßa: voc√™ tem mais miss√µes para tentar salvar o planeta.")

        self.missao_atual += 1
        self.exibir_missao()

    def finalizar_jogo(self):
        total = sum(self.pontuacao.values())
        if self.pontuacao['sustentavel'] > 2 and self.pontuacao['ecologico'] > 2:
            final = "FINAL ECORENASER: Gra√ßas √†s suas escolhas sustent√°veis e √©ticas, o planeta come√ßa a se regenerar. Voc√™ se torna um s√≠mbolo de esperan√ßa para a humanidade."
        elif self.pontuacao['tecnologico'] > 3:
            final = "FINAL DOM√çNIO SINT√âTICO: O mundo sobrevive sob controle artificial, mas a natureza foi substitu√≠da por tecnologia. Ainda assim, o planeta respira."
        else:
            final = "FINAL INDEFINIDO: Voc√™ tentou, mas o equil√≠brio foi fr√°gil demais. O mundo cambaleia, esperando novas solu√ß√µes."

        messagebox.showinfo("Fim do Jogo", final)
        self.root.quit()

if _name_ == "_main_":
    root = tk.Tk()
    jogo = JogoGUI(root)
    root.mainloop()
